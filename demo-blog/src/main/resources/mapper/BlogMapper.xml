<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cc.mapper.BlogMapper">

    <!--  点击博客增加view量  -->
    <update id="addView">
        update t_blog set views=views+1 where id=#{id}
    </update>

    <!--查询出文章评论数量并更新-->
    <update id="getCommentCountById" parameterType="com.cc.pojo.Blog">
        update t_blog b set b.comment_count = (
        select count(*) from t_comment c where c.blog_id = #{id} and b.id = #{id}
        ) WHERE b.id = #{id}
    </update>


    <!--后台展示博客-->
    <select id="getBlog" resultMap="blog">
        select b.id, b.published, b.flag, b.title, b.content, b.type_id,
         b.tag_ids, b.first_picture, b.description, b.recommend,
         b.share_statement, b.appreciation, b.commentabled
        from t_blog b  where  b.id = #{id}
    </select>

    <!--博客详情（带博客的作者和标签）-->
   <!-- <select id="getDetailedBlog" resultMap="blog">
        select b.id, b.first_picture, b.flag, b.title, b.content, b.views,b.comment_count,
        b.update_time,b.commentabled, b.share_statement, b.appreciation,
        u.nickname, u.avatar,
        tag.id tagid, tag.name tagname
        from t_blog b, t_user u, t_tag tag,t_blog_tags tb
        where b.user_id = u.id
        and tb.blog_id = b.id
        and tb.tag_id = tag.id
        and  b.id = #{id}
    </select>-->

    <!--博客详情查询-->
    <select id="getDetailedBlog" resultMap="detailedBlog">
        select b.id bid, b.first_picture, b.flag, b.title, b.content, b.views, b.comment_count,
        b.update_time, b.commentabled, b.share_statement, b.appreciation,
        u.nickname,u.avatar,t.name
        from t_blog b, t_user u, t_type t
        where b.user_id = u.id and b.type_id = t.id and b.id = #{id}
    </select>
    <resultMap id="detailedBlog" type="com.cc.vo.DetailedBlog">
        <id property="id" column="bid"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="typeName" column="name"/>
        <result property="views" column="views"/>
        <result property="commentCount" column="comment_count"/>
        <result property="updateTime" column="update_time"/>
        <result property="commentabled" column="commentabled"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="appreciation" column="appreciation"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>


    <resultMap id="blog" type="com.cc.pojo.Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="flag" column="flag"/>
        <result property="views" column="views"/>
        <result property="commentCount" column="comment_count"/>
        <result property="updateTime" column="update_time"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="published" column="published"/>
        <result property="appreciation" column="appreciation"/>
        <result property="commentabled" column="commentabled"/>
        <result property="description" column="description"/>
        <result property="recommend" column="recommend"/>
        <result property="createTime" column="create_time"/>
        <result property="typeId" column="type_id"/>
        <result property="userId" column="user_id"/>
        <result property="tagIds" column="tag_ids"/>
        <association property="type" javaType="com.cc.pojo.Type">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
          <!--  <result property="name" column="typename"/>-->
        </association>
        <association property="user" javaType="com.cc.pojo.User">
            <id property="id" column="uid"/>
            <result property="nickname" column="nickname"/>
            <result property="username" column="username"/>
            <result property="email" column="email"/>
            <result property="avatar" column="avatar"/>
        </association>
        <collection property="tags" ofType="com.cc.pojo.Tag">
            <id property="id" column="tagid"/>
            <result property="name" column="tagname"/>
        </collection>
    </resultMap>

    <!--所有博客-->
    <select id="getAllBlog" resultMap="blog">
        select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published,
               t.id, t.name
        from t_blog b, t_type t
        where b.type_id = t.id    /*博客类型id=类型id*/
        order by b.update_time desc
    </select>

    <!--根据类型id获取博客-->
  <!--  <select id="getByTypeId" resultMap="blog">
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
        t.name typename, t.id typeid,
        u.nickname, u.avatar
        from t_blog b, t_type t, t_user u
        where b.type_id = t.id and u.id = b.user_id and b.type_id = #{typeId}
        order by b.update_time desc
    </select>-->
    <!--分类页面查询-->
    <select id="getByTypeId" resultMap="firstPageBlog">
        select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,
        t.name ,
        u.nickname, u.avatar
        from t_blog b, t_type t, t_user u
        where b.type_id = t.id and u.id = b.user_id and b.type_id = #{typeId}
        order by b.update_time desc
    </select>

    <!--根据标签id获取博客-->
    <select id="getByTagId" resultMap="blog">
        select b.id, b.title, b.first_picture, b.views, b.comment_count, b.update_time, b.description,
        t.name , t.id typeid,
        t1.name tagname, t1.id tagid,
        u.nickname, u.avatar
        from t_blog b, t_type t, t_user u, t_blog_tags tb, t_tag t1
        where b.type_id = t.id and u.id = b.user_id and tb.blog_id = b.id and tb.tag_id = t1.id and t1.id = #{tagId}
        order by b.update_time desc
    </select>



    <resultMap id="firstPageBlog" type="com.cc.vo.FirstPageBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="views" column="views"/>
        <result property="commentCount" column="comment_count"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>

        <result property="typeName" column="name"/>
        <result property="tagName" column="name"/>

        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <select id="getIndexBlog" resultMap="firstPageBlog">
        select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description,
        t.name,
        u.nickname, u.avatar
        from t_blog b, t_type t, t_user u
        where b.type_id = t.id and  u.id = b.user_id
        order by b.update_time desc
    </select>

    <!--推荐博客展示-->
    <select id="getAllRecommendBlog" resultMap="blog">
        select id, title, recommend from t_blog order by update_time desc;
    </select>

    <!--全局搜索博客-->
    <select id="getSearchBlog" resultMap="blog">
        <bind name="pattern" value="'%' + query + '%'" />
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
        t.name typename,
        u.nickname, u.avatar
        from t_blog b, t_type t, t_user u
        where b.type_id = t.id and  u.id = b.user_id and
        (b.title like #{pattern} or b.content like  #{pattern})
        order by b.update_time desc
    </select>

    <!--后台根据标题、分类、推荐  搜索博客-->
    <select id="searchAllBlog" parameterType="com.cc.vo.SearchBlog" resultMap="blog">
        <bind name="pattern" value="'%' + title + '%'" />    /*模糊查询*/
        select b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name
        from t_blog b ,t_type t
        <where>
            <if test="1 == 1">
                b.type_id = t.id    /*博客类型id=类型id*/
            </if>
            <if test="typeId != null">
                and b.type_id = #{typeId}       /*根据博客类型查询*/
            </if>
           <!-- <if test="recommend != null">
                and b.recommend = #{recommend}   /*根据博客推荐查询*/
            </if>-->
            <if test="title != null">
                and b.title like #{pattern}   /*根据博客title模糊查询*/
            </if>
        </where>
    </select>

    <!--查询所有年份，返回一个集合-->
    <select id="findGroupYear" resultType="String">
        select DATE_FORMAT(b.update_time, '%Y')
        from t_blog b
        order by b.create_time desc
    </select>

    <!--按年份查询博客-->
    <select id="findByYear" resultMap="blog">
        select b.title, b.update_time, b.id, b.flag
        from t_blog b
        where DATE_FORMAT(b.update_time, "%Y") = #{year}
    </select>


    <!--新增博客-->
    <!--useGeneratedKeys="true"；使用自增主键获取主键值策略
        keyProperty；指定对应的主键属性，也就是mybatis获取到主键值以后，将这个值封装给javaBean的哪个属性
    -->
    <insert id="saveBlog" parameterType="com.cc.pojo.Blog" useGeneratedKeys="true" keyProperty="id">
        insert into t_blog (title, content, first_picture, flag,
        views, appreciation, share_statement, commentabled,published,
        recommend, create_time, update_time, type_id, tag_ids, user_id, description)
        values (#{title}, #{content}, #{firstPicture}, #{flag}, #{views}, #{appreciation},
        #{shareStatement}, #{commentabled}, #{published}, #{recommend}, #{createTime},
        #{updateTime}, #{typeId}, #{tagIds}, #{userId}, #{description});
    </insert>

    <!--新增博客和标签-->
    <insert id="saveBlogAndTag" parameterType="com.cc.pojo.BlogAndTag">
        insert into t_blog_tags (tag_id, blog_id) values (#{tagId},#{blogId});
    </insert>

    <!--更新博客-->
    <update id="updateBlog" parameterType="com.cc.pojo.Blog">
        update t_blog set published = #{published},flag = #{flag} ,
        title = #{title}, content = #{content}, type_id = #{typeId}, tag_ids = #{tagIds},
        first_picture = #{firstPicture} , description = #{description} , recommend = #{recommend} ,
        share_statement = #{shareStatement}, appreciation = #{appreciation},
        commentabled = #{commentabled} ,update_time = #{updateTime} where id = #{id}
    </update>

    <!--删除博客-->
    <delete id="deleteBlog">
        delete from t_blog where id = #{id}
    </delete>

</mapper>